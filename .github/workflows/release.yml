name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

jobs:
  create-release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Read version from file
        id: version
        run: |
          version=$(cat version.txt)
          echo "version=$version" >> $GITHUB_ENV

      - name: Generate changelog from commits
        id: changelog
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
          if [ -z "$latest_tag" ]; then
            commits=$(git log --pretty=format:"%s" --no-merges)
          else
            commits=$(git log "$latest_tag"..HEAD --pretty=format:"%s" --no-merges)
          fi
      
          features=""
          fixes=""
          others=""
      
          while IFS= read -r line; do
            if echo "$line" | grep -q "^feat:"; then
              features="$features- ${line#feat: }\\n"
            elif echo "$line" | grep -q "^fix:"; then
              fixes="$fixes- ${line#fix: }\\n"
            else
              others="$others- $line\\n"
            fi
          done <<< "$commits"
      
          changelog=""
          if [ -n "$features" ]; then
            changelog="$changelog## ✨ Features\\n$features\\n"
          fi
          if [ -n "$fixes" ]; then
            changelog="$changelog## 🐛 Fixes\\n$fixes\\n"
          fi
          if [ -n "$others" ]; then
            changelog="$changelog## 🔧 Others\\n$others"
          fi
      
          echo "$changelog" > release_body.txt
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          cat release_body.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV  
          echo -e "$changelog" > release_body.txt
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.version }}
          name: Release ${{ env.version }}
          body: |
            🛠 Changes:
            ${{ env.RELEASE_BODY }}
          body_path: release_body.txt  
        
      - name: Tag and Push Docker Image
        env:
          GITHUBTOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo $GITHUBTOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker pull ghcr.io/go-dev-space/auth-service:latest
          docker tag ghcr.io/go-dev-space/auth-service:latest ghcr.io/go-dev-space/auth-service:${{ env.version }}
          docker push ghcr.io/go-dev-space/auth-service:${{ env.version }}